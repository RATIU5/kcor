# !!!!!!!!!!!!!! README !!!!!!!!!!!!!!
# If you add variables to this file, make sure you add them to @/lib/env.ts as well.
# The file at @/lib/env.ts type-checks the environment variables and provides them to the app.
# Don't access environment variables directly from the process.env object. Instead, use the functions in @/lib/env.ts.
# !!!!!!!!!!!!!! README !!!!!!!!!!!!!!

# ===========================================
# ================= STRAPI ==================
# ===========================================

# ++++ Connect Strapi to the database ++++
DATABASE_CLIENT="postgres"
DATABASE_HOST="127.0.0.1"
DATABASE_PORT="5432"
DATABASE_NAME="strapi"
DATABASE_USERNAME=""
DATABASE_PASSWORD=""
DATABASE_SSL=false

# ++++ Strapi security variables ++++
JWT_SECRET=""
ADMIN_JWT_SECRET=""
APP_KEYS="","","",""
TRANSFER_TOKEN_SALT=""
API_TOKEN_SALT=""

# ===========================================
# =================== WEB ===================
# ===========================================

# ++++ Use the following exact values ++++
BIGCOMMERCE_CANONICAL_STORE_DOMAIN="mybigcommerce.com"
BIGCOMMERCE_API_URL="https://api.bigcommerce.com"
BIGCOMMERCE_CDN_HOSTNAME="*.bigcommerce.com"

# ++++ Add custom values ++++
COMPANY_NAME=""
SITE_NAME=""

# ++++ Store information ++++
BIGCOMMERCE_STORE_HASH=""

# ++++ Sales channel / Multi-Storefront ++++
# To get started quickly, you can use channel 1, which corresponds with the default hosted storefront configured with every account.
# However, it's best practice to create a channel for each storefront.
# To configure a new channel, use the following API call sequence:
# * Create a channel: https://developer.bigcommerce.com/docs/rest-management/channels#create-a-channel
# * Create a site (for the channel): https://developer.bigcommerce.com/docs/rest-management/sites#create-a-site
# * Upsert site checkout URL (for the channel site): https://developer.bigcommerce.com/docs/rest-management/channels/channel-site-checkout-url#upsert-a-site's-checkout-url
BIGCOMMERCE_CHANNEL_ID=""

# ++++ Authentication ++++
# Use a store-level API account. Scopes should include the following:
# * Storefront API Tokens : manage
# * Storefront API Customer Impersonation Tokens : manage
# * Carts : modify
# For more information, see https://developer.bigcommerce.com/api-docs/getting-started/api-accounts#oauth-scopes
BIGCOMMERCE_ACCESS_TOKEN=""

# Use the preceding access token to create a customer impersonation token:
# Create a customer impersonation token (to sign customers in to a headless storefront): https://developer.bigcommerce.com/docs/storefront-auth/tokens/customer-impersonation-token
BIGCOMMERCE_CUSTOMER_IMPERSONATION_TOKEN=""

# ++++ Strapi ++++
# The path to the Strapi API, to be used for fetching product data.
# For example, if you're running Strapi locally, the URL might be "http://localhost:1337".
STRAPI_API_URL="http://localhost:1337"

# The Strapi API token, to be used for fetching product data.
STRAPI_API_TOKEN=""

# ++++ Public Variables ++++
# The URL of the storefront, to be used for generating canonical URLs.
# DO NOT create this variable in production, as Vercel will automatically set it.
# DO NOT include the protocol (http:// or https://) or trailing slash.
NEXT_PUBLIC_VERCEL_URL="localhost:3000"
NEXT_PUBLIC_DEFAULT_REVALIDATE_TARGET=3600